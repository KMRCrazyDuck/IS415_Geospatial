---
title: "In Class Exericse 11 Calibrating Spatial Interaction Models (SIM) with R"
author: "Kwek Ming Rong"
date: "27 March 2023"
date-modified: "`r Sys.Date()`"
format: html
execute:
  eval: true
  echo: true
  warning: false
editor: visual
---

## Getting Started

```{r}
pacman::p_load(tmap, sf, sp, caret, stplanr, reshape2, broom, tidyverse, readr)
```

## Preparing the Flow Data

### Importing the OD Data

Firstly, we will import the Passenger Volume by Origin Destination Bus Stops data set downloaded from LTA DataMall, by using read_csv() of readr
package

```{r}
odbus <- read_csv("Data/Aspatial/origin_destination_bus_202210.csv")
```


```{r}
odbus$ORIGIN_PT_CODE <-
  as.factor(odbus$ORIGIN_PT_CODE)
odbus$DESTINATION_PT_CODE <-
  as.factor(odbus$DESTINATION_PT_CODE)
```


```{r}
odbus7_9 <- odbus %>%
  filter(DAY_TYPE == "WEEKDAY") %>%
  filter(TIME_PER_HOUR >= 7 &
           TIME_PER_HOUR <= 9) %>%
  group_by(ORIGIN_PT_CODE,
           DESTINATION_PT_CODE) %>%
  summarise(TRIPS = sum(TOTAL_TRIPS))
```

```{r}
write_rds(odbus7_9, "Data/rds/odbus7_9.rds")
```


```{r}
odbus7_9 <- read_rds("Data/rds/odbus7_9.rds")
```

```{r}
busstop <- st_read(dsn = "Data/Geospatial",
                   layer = "BusStop") %>%
  st_transform(crs = 3414)
```

```{r}
mpsz <- st_read(dsn = "Data/Geospatial",
                   layer = "MPSZ-2019") %>%
  st_transform(crs = 3414)
mpsz
```

```{r}
busstop_mpsz <- st_intersection(busstop, mpsz) %>%
  select(BUS_STOP_N, SUBZONE_C) %>%
  st_drop_geometry()
```

Next, we are going to append the planning subzone code from busstop_mpsz data frame on odbus_7_9 data frame.

```{r}
od_data <- left_join(odbus7_9, busstop_mpsz,
                     by = c("ORIGIN_PT_CODE" = "BUS_STOP_N")) %>%
  rename(ORIGIN_BS = ORIGIN_PT_CODE,
         ORIGIN_SZ = SUBZONE_C,
         DESTIN_BS = DESTINATION_PT_CODE)


od_data <- left_join(od_data, busstop_mpsz,
                     by = c("DESTIN_BS" = 
                            "BUS_STOP_N"))
```

Before we continue, it is a good practice for us to check for duplicating records

```{r}
duplicate <- od_data %>%
  group_by_all() %>%
  filter(n()>1) %>%
  ungroup()
```

If duplicated records are found.

```{r}
od_data <- unique(od_data)
```

```{r}
duplicate <- od_data %>%
  group_by_all() %>%
  filter(n()>1) %>%
  ungroup()
```


```{r}
od_data <- od_data %>%
  rename(DESTIN_SZ = SUBZONE_C) %>%
  drop_na()
```

## Visualising the Geospatial Data

```{r}
tmap_mode("plot")
tmap_options(check.and.fix = TRUE)
qtm(mpsz)
```

```{r}
mpsz <- mpsz[order(mpsz$SUBZONE_C),]
head(mpsz, 10)
```

```{r}
mpsz_sp <- as(mpsz, "Spatial")
```

### Computing the distance matrix

```{r}
dist <- spDists(mpsz_sp)
dist
```

```{r}
sz_names <- mpsz$SUBZONE_C
```

```{r}
colnames(dist) <- paste0(sz_names)
rownames(dist) <- paste0(sz_names)
```

### Updating intra-zonal distances

```{r}
distPair <- melt(dist) %>%
  rename(dist = value)
head(distPair, 10)
```

```{r}
distPair %>%
  filter(dist > 0) %>%
  summary()
```

```{r}
distPair$dist <- ifelse(distPair$dist == 0, 50, distPair$dist)
```

```{r}
distPair <- distPair %>%
  rename(orig = Var1,
         dest = Var2)
```

```{r}
flow_data <- od_data %>%
  group_by(ORIGIN_SZ, DESTIN_SZ) %>%
  summarize(TRIPS = sum(TRIPS))
```

```{r}
pop <- read_csv("Data/Aspatial/pop.csv")
```

```{r}
pop <- pop %>%
  left_join(mpsz, 
            by = c("PA" = "PLN_AREA_N",
                   "SZ" = "SUBZONE_N")) %>%
  select(1:6) %>%
  rename(SZ_NAME = SZ,
         SZ = SUBZONE_C)
```

```{r}
flow_data1 <- flow_data %>%
  left_join(distPair,
            by = c("ORIGIN_SZ" = "orig",
                   "DESTIN_SZ" = "dest"))
```

### Origin Population

```{r}
flow_data1 <- flow_data %>%
  left_join(pop,
            by = c("ORIGIN_SZ" = "SZ")) %>%
  rename(ORIGIN_AGE7_12 = AGE7_12,
         ORIGIN_AGE13_24 = AGE13_24,
         ORIGIN_25_64 = AGE25_64) %>%
  select(-c(PA, SZ_NAME))
```

### Destination Population

```{r}
flow_data1 <- flow_data %>%
  left_join(pop,
            by = c("DESTIN_SZ" = "SZ")) %>%
  rename(DESTIN_AGE7_12 = AGE7_12,
         DESTIN_AGE13_24 = AGE13_24,
         DESTIN_25_64 = AGE25_64) %>%
  select(-c(PA, SZ_NAME))
```
